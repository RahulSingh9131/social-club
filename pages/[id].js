import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import CommentModal from '../components/CommentModal'
import Sidebar from '../components/Sidebar'
import LogoutIcon from '@mui/icons-material/Logout';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import { useRouter } from 'next/router'
import { useSelector } from 'react-redux';
import { getProviders, getSession, useSession } from 'next-auth/react'
import { signOut } from 'next-auth/react';
import { collection, doc, onSnapshot, orderBy, query } from 'firebase/firestore'
import { db } from '../firebase'
import Post from '../components/Post';
import Comment from '../components/Comment';
import LandingPage from '../components/LandingPage';


function SinglePostpage({providers}) {
    const {isModalOpen}=useSelector((store)=>store.post);
    const [post,setPost]=useState();
    const [comments,setComments]=useState([]);
    const {data: session}=useSession();
    const router=useRouter();
    const {id}=router.query;

 

  useEffect(
    () =>
      onSnapshot(doc(db, "posts", id), (snapshot) => {
        setPost(snapshot.data());
      }),
    [id]
  );

  useEffect(
    () =>
      onSnapshot(
        query(
          collection(db, "posts", id, "comments"),
          orderBy("timestamp", "desc")
        ),
        (snapshot) => setComments(snapshot.docs)
      ),
    [id]
  );

  if(!session) return <LandingPage providers={providers}/>

  return (
    <div className="">
    <Head>
      <title>{post?.username}</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.png" />
    </Head>
    <main className='bg-black min-h-screen flex max-w-[1500px] mx-auto'>
      <Sidebar/>
      <div className='text-white flex-grow border-l border-r border-gray-700
        max-w-2xl sm:ml-[73px] xl:ml-[360px]'>
            <div className='flex items-center px-1.5 py-2 border-b
            border-gray-700 text-[#d9d9d9] font-semibold text-xl
            gap-x-4 sticky top-0 z-30 bg-black  sm:justify-between'>
                <div className='flex items-center justify-center xl:px-0 hoverAnimation w-9 h-9'>
                    <ArrowBackIcon className="text-white" onClick={()=>router.push("/")}/>
                </div>
                <h2 className='text-lg sm:text-xl font-bold'>Comments</h2>
                <div className='hoverAnimation flex items-center justify-center w-9 h-9 xl:px-0 ml-auto'
                onClick={signOut}>
                    <LogoutIcon/>
                </div>
            </div>
            <Post id={id} post={post} postPage/>
            {comments.length >0 && (
              <div className='pb-72'>
                {comments.map((comment)=>(
                  <Comment key={comment.id} id={comment.id} comment={comment.data()}/>
                ))}
              </div>
            )}
      </div>
      {/* widgets */}
      {isModalOpen && <CommentModal/>}
    </main>
  </div>
  )
}

export default SinglePostpage

export async function getServerSideProps(context){
    const providers= await getProviders();
    const session = await getSession(context);
  
    return {
      props:{
        providers,
        session,
      }
    }
  }